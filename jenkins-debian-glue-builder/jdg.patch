From 62f6e148d819e685d02f2c0c9dd945efb50fdf45 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Draszik?= <git@andred.net>
Date: Thu, 29 Sep 2016 12:56:07 +0100
Subject: [PATCH 1/6] build-and-provide-package: unknown patch

Not sure where this is coming from, or why it's needed :-(
---
 scripts/build-and-provide-package | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/scripts/build-and-provide-package b/scripts/build-and-provide-package
index bba91cf..d9cd223 100755
--- a/scripts/build-and-provide-package
+++ b/scripts/build-and-provide-package
@@ -811,8 +811,8 @@ remove_packages() {
 }
 
 remove_missing_binary_packages() {
-  if [ -n "${SKIP_REMOVAL:-}" ] ; then
-    echo "*** Skipping removal of existing packages as requested via SKIP_REMOVAL ***"
+  if [ -n "${SKIP_MISSING_BINARY_REMOVAL:-${SKIP_REMOVAL:-}}" ] ; then
+    echo "*** Skipping removal of existing packages as requested via SKIP_MISSING_BINARY_REMOVAL or SKIP_REMOVAL ***"
     return 0
   fi
 
-- 
2.9.3

From 72f593e0633b802216bc2792a08b1609ae212f84 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Draszik?= <git@andred.net>
Date: Thu, 29 Sep 2016 12:56:57 +0100
Subject: [PATCH 2/6] jdg-debc: works for foreign architecture packages

---
 scripts/jdg-debc | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/scripts/jdg-debc b/scripts/jdg-debc
index ea60b83..29cc27f 100755
--- a/scripts/jdg-debc
+++ b/scripts/jdg-debc
@@ -13,12 +13,17 @@ fi
 
 CHANGES=$(find . -maxdepth 1 -name \*.changes ! -name \*_source.changes)
 
+HOST_ARCH="$(dpkg-architecture -qDEB_HOST_ARCH)"
+if [ -n "${HOST_ARCH}" ] &&  [ -n "${architecture}" ] && [ "${architecture}" != "${HOST_ARCH}" ] ; then
+  arch="-a ${architecture}"
+fi
+
 if [ -n "$CHANGES" ] >/dev/null 2>&1 ; then
   for file in $CHANGES ; do
-    debc "$file"
+    debc ${arch} "$file"
   done
 elif ls ./*.deb >/dev/null 2>&1 ; then
-  debc ./*.deb
+  debc ${arch} ./*.deb
 else
   echo "No changes and deb files found in $(pwd), ignoring."
 fi
-- 
2.9.3

From acf6c45894cb7188e78f395a546ba549c0f2b980 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Draszik?= <git@andred.net>
Date: Thu, 29 Sep 2016 12:57:37 +0100
Subject: [PATCH 3/6] build-and-provide-package: fix a typo wrt freight

---
 scripts/build-and-provide-package | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/scripts/build-and-provide-package b/scripts/build-and-provide-package
index d9cd223..89942a2 100755
--- a/scripts/build-and-provide-package
+++ b/scripts/build-and-provide-package
@@ -912,7 +912,7 @@ freight_ensure_repo() {
 #
 # Directories for the Freight library and Freight cache.
 # Your web server's document root should point to \$VARCACHE.
-VARLIB="${FREIGHT_VARLIB:-/var/lib/freigh}"
+VARLIB="${FREIGHT_VARLIB:-/var/lib/freight}"
 VARCACHE="${FREIGHT_VARCACHE:-/var/cache/freight}"
 
 # Default 'Origin' and 'Label' fields for 'Release' files.
-- 
2.9.3

From 947558bda5ff3dbde070cd56aa77b362f4ccb0f9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Draszik?= <git@andred.net>
Date: Thu, 29 Sep 2016 12:59:28 +0100
Subject: [PATCH 4/6] build-and-provide-package: don't create freight dirs
 unnecessarily

We only create the default dirs now if we're also creating
the config file. Otherwise we parse the config file to
extract the values.

Also, FREIGHT_VARLIB has some permissions tightened, as it
doesn't need to be world accessible, http is served from
FREIGHT_VARCACHE
---
 scripts/build-and-provide-package | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/scripts/build-and-provide-package b/scripts/build-and-provide-package
index 89942a2..73c27c0 100755
--- a/scripts/build-and-provide-package
+++ b/scripts/build-and-provide-package
@@ -901,12 +901,13 @@ dput_wrapper() {
 }
 
 freight_ensure_repo() {
-  echo "*** Creating freight directory structure ***"
-  ${SUDO_CMD:-} mkdir -p "${FREIGHT_VARCACHE}" "${FREIGHT_VARLIB}"
+  local varlib
+  local varcache
 
   if [ ! -f "$FREIGHT_CONF" ] ; then
     echo "*** Creating freight repository configuration in $FREIGHT_CONF ***"
 
+    ${SUDO_CMD:-} mkdir -p "$(dirname ${FREIGHT_CONF})"
     ${SUDO_CMD:-} sh -c "cat > ${FREIGHT_CONF}" <<EOF
 # Generated by jenkins-debian-glue
 #
@@ -933,6 +934,12 @@ EOF
   fi
 
   [ -f "$FREIGHT_CONF" ] || bailout 1 "Error: Failed to create freight configuration in $FREIGHT_CONF"
+
+  echo "*** Creating freight directory structure ***"
+  varlib=$(grep ^VARLIB "$FREIGHT_CONF" | cut -f 2 -d = | sed -e 's,",,g')
+  varcache=$(grep ^VARCACHE "$FREIGHT_CONF" | cut -f 2 -d = | sed -e 's,",,g')
+  ${SUDO_CMD:-} mkdir -p "${varcache}" "${varlib}"
+  ${SUDO_CMD:-} chmod o-rwx "${varlib}"
 }
 
 freight_wrapper() {
-- 
2.9.3

From dac38547bb8f05f75a70029c4ce8f191d6008f07 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andr=C3=A9=20Draszik?= <git@andred.net>
Date: Thu, 29 Sep 2016 13:02:03 +0100
Subject: [PATCH 5/6] build-and-provide-package: use mktemp rather than PID for
 directory name

If running in a container where /tmp/ is shared across
containers, it can otherwise happen that two instances
interfere with each other, due to sharing the same pid
inside each container.
---
 scripts/build-and-provide-package | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/scripts/build-and-provide-package b/scripts/build-and-provide-package
index 73c27c0..cf5908d 100755
--- a/scripts/build-and-provide-package
+++ b/scripts/build-and-provide-package
@@ -168,7 +168,7 @@ bailout() {
     rm -f "$WORKSPACE"/binaries/*
   fi
 
-  ${SUDO_CMD:-} rm -rf /tmp/apt-$$
+  [ -n "${tmpaptdir:-}" ] && ${SUDO_CMD:-} rm -rf "${tmpaptdir}"
 
   [ -n "$start_seconds" ] && SECONDS="$[$(cut -d . -f 1 /proc/uptime)-$start_seconds]" || SECONDS="unknown"
   echo "*** Finished execution of $0 at $(date) [running ${SECONDS} seconds] ***"
@@ -627,9 +627,10 @@ autopkgtest_results() {
 
 cowbuilder_run() {
   echo "*** cowbuilder build phase for arch $architecture ***"
-  mkdir -p "$WORKSPACE"/binaries/ /tmp/apt-$$
+  tmpaptdir=$(mktemp -d /tmp/apt-$(echo ${JOB_NAME} | sed -e 's,/,+,g')_XXXXXX)
+  mkdir -p "$WORKSPACE"/binaries/ "${tmpaptdir}"
 
-  local BINDMOUNTS="/tmp/apt-$$ ${USER_BINDMOUNTS:-}"
+  local BINDMOUNTS="${tmpaptdir} ${USER_BINDMOUNTS:-}"
 
   # make sure we build arch specific packages only when necessary
   identify_build_type
@@ -661,19 +662,19 @@ cowbuilder_run() {
         # available in Squeeze.
         local trusted="[trusted=yes]"
       fi
-      cat > /tmp/apt-$$/release.list <<EOF
+      cat > "${tmpaptdir}"/release.list <<EOF
 deb ${trusted} file://${REPOSITORY} ${release} ${components}
 EOF
     fi
 
     if [ -n "${REPOSITORY_KEYRING:-}" ]; then
-      cp -a "${REPOSITORY_KEYRING}" /tmp/apt-$$/keyring.gpg
+      cp -a "${REPOSITORY_KEYRING}" "${tmpaptdir}"/keyring.gpg
     fi
   fi
 
   # Adding extra repository for resolving dependencies
   if [ -n "${REPOSITORY_EXTRA:-}" ]; then
-    echo ${REPOSITORY_EXTRA} | tr ',' '\n' > /tmp/apt-$$/extra.list
+    echo ${REPOSITORY_EXTRA} | tr ',' '\n' > "${tmpaptdir}"/extra.list
   fi
 
   if [ -n "${REPOSITORY_EXTRA_KEYS:-}" ]; then
@@ -681,7 +682,7 @@ EOF
     IFS=',' read -a array <<< "${REPOSITORY_EXTRA_KEYS}"
     for key in "${array[@]}" ; do
       curl -O "${key}"
-      gpg --no-default-keyring --keyring /tmp/apt-$$/keyring.gpg --import "${key##*/}"
+      gpg --no-default-keyring --keyring "${tmpaptdir}"/keyring.gpg --import "${key##*/}"
     done
     unset key
     IFS="$OIFS"
-- 
2.9.3
